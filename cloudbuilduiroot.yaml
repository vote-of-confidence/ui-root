steps:
#  - name: 'gcr.io/cloud-builders/docker'
#    id: build-ui-root
#    args:
#      - 'build'
#      - '--no-cache'
#      - '--file=./Dockerfile'
#      - '-t'
#      - 'eu.gcr.io/$PROJECT_ID/voc-ui-root:$SHORT_SHA'
#      - '-t'
#      - 'eu.gcr.io/$PROJECT_ID/voc-ui-root:latest'
#      - '.'
#    waitFor: ['-']
#  # This step pushes the image to Container Registry
#  # The PROJECT_ID and SHORT_SHA variables are automatically
#  # replaced by Cloud Build.
#  - name: 'gcr.io/cloud-builders/docker'
#    id: push-ui-root
#    args:
#      - 'push'
#      - 'eu.gcr.io/$PROJECT_ID/voc-ui-root:$SHORT_SHA'
#    wait_for: ['build-ui-root']
#  - name: 'gcr.io/cloud-builders/docker'
#    id: push-ui-root-latest
#    args:
#      - 'push'
#      - 'eu.gcr.io/$PROJECT_ID/voc-ui-root:latest'
#    wait_for: ['build-ui-root']
#  - name: 'gcr.io/cloud-builders/kubectl'
#    id: deploy-ui-root-latest
#    args:
#      - 'set'
#      - 'image'
#      - 'deployment/ui-root-deployment'
#      - 'ui-root=eu.gcr.io/$PROJECT_ID/voc-ui-root:$SHORT_SHA'
#    env:
#      - 'CLOUDSDK_COMPUTE_ZONE=europe-north1-c'
#      - 'CLOUDSDK_CONTAINER_CLUSTER=voc-cluster-1'
#    wait_for: ['push-ui-root']


# Access the id_github file from Secret Manager
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', 'gcloud secrets versions access latest --secret=voc-github > /root/.ssh/id_github' ]
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  # Set up git with key and domain
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod 600 /root/.ssh/id_github
        cat <<EOF >/root/.ssh/config
        Hostname github.com
        IdentityFile /root/.ssh/id_github
        EOF
        ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  # Connect to the repository
  - name: 'gcr.io/cloud-builders/git'
    dir: persistent_volume
    args:
      - clone
      - git@github.com:vote-of-confidence/ui-root-env.git
    volumes:
      - name: 'ssh'
        path: /root/.ssh
      - name: 'vol1'
        path: '/workspace/persistent_volume'

  # [START cloudbuild-trigger-cd]
  # This step clones the ui-root-env repository
  - name: 'gcr.io/cloud-builders/git'
    id: clone_env_repository
    volumes:
      - name: 'vol1'
        path: '/workspace/persistent_volume'
    entrypoint: 'bash'
    env: ['GIT_DISCOVERY_ACROSS_FILESYSTEM=1']
    args:
      - '-c'
      - |
        cd /workspace/persistent_volume/ui-root-env && \
        git checkout candidate && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
        ls -a  && \
        pwd

  # This step generates the new manifest
  - name: 'gcr.io/cloud-builders/git'
    id:  generate_manifest
    volumes:
      - name: 'vol1'
        path: '/workspace/persistent_volume'
    entrypoint: 'bash'
    env: ['GIT_DISCOVERY_ACROSS_FILESYSTEM=1']
    args:
      - '-c'
      - |
        cd /workspace/persistent_volume/ui-root-env && \
        ls -a && \
        pwd && \
        sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
        sed "s/COMMIT_SHA/${SHORT_SHA}/g" > /workspace/persistent_volume/ui-root-env/kubernetes.yaml && \
        cat /workspace/persistent_volume/ui-root-env/kubernetes.yaml

  # This step pushes the manifest back to ui-root-env push_manifest
  - name: 'gcr.io/cloud-builders/git'
    id:  prepare_manifest
    volumes:
      - name: 'vol1'
        path: '/workspace/persistent_volume'
      - name: 'ssh'
        path: /root/.ssh
    entrypoint: 'bash'
    env: ['GIT_DISCOVERY_ACROSS_FILESYSTEM=1']
    args:
      - '-c'
      - |
        cd /workspace/persistent_volume/ui-root-env && \
        set -x && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
        git add kubernetes.yaml && \
        git commit -m "Deploying image eu.gcr.io/$PROJECT_ID/voc-ui-root:${SHORT_SHA}
        Built from commit ${COMMIT_SHA} of repository ui-root
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)"

  - name: 'gcr.io/cloud-builders/git'
    dir: /workspace/persistent_volume/ui-root-env
    env: ['GIT_DISCOVERY_ACROSS_FILESYSTEM=1']
    args:
      - push
      - origin
      - candidate
    volumes:
      - name: 'ssh'
        path: /root/.ssh
      - name: 'vol1'
        path: '/workspace/persistent_volume'
# [END cloudbuild-trigger-cd]
#images:
#  - 'eu.gcr.io/$PROJECT_ID/voc-ui-root:latest'
timeout: '1800s'